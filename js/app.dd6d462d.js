(function (e) {
  function r(r) {
    for (
      var t, a, u = r[0], s = r[1], c = r[2], p = 0, l = [];
      p < u.length;
      p++
    )
      (a = u[p]),
        Object.prototype.hasOwnProperty.call(i, a) && i[a] && l.push(i[a][0]),
        (i[a] = 0);
    for (t in s) Object.prototype.hasOwnProperty.call(s, t) && (e[t] = s[t]);
    f && f(r);
    while (l.length) l.shift()();
    return o.push.apply(o, c || []), n();
  }
  function n() {
    for (var e, r = 0; r < o.length; r++) {
      for (var n = o[r], t = !0, a = 1; a < n.length; a++) {
        var u = n[a];
        0 !== i[u] && (t = !1);
      }
      t && (o.splice(r--, 1), (e = s((s.s = n[0]))));
    }
    return e;
  }
  var t = {},
    a = { app: 0 },
    i = { app: 0 },
    o = [];
  function u(e) {
    return (
      s.p +
      "js/" +
      ({ "app-layout": "app-layout", yugioh: "yugioh" }[e] || e) +
      "." +
      { "app-layout": "f2be6f51", yugioh: "6d546e9b" }[e] +
      ".js"
    );
  }
  function s(r) {
    if (t[r]) return t[r].exports;
    var n = (t[r] = { i: r, l: !1, exports: {} });
    return e[r].call(n.exports, n, n.exports, s), (n.l = !0), n.exports;
  }
  (s.e = function (e) {
    var r = [],
      n = { "app-layout": 1, yugioh: 1 };
    a[e]
      ? r.push(a[e])
      : 0 !== a[e] &&
        n[e] &&
        r.push(
          (a[e] = new Promise(function (r, n) {
            for (
              var t =
                  "css/" +
                  ({ "app-layout": "app-layout", yugioh: "yugioh" }[e] || e) +
                  "." +
                  { "app-layout": "13f70b37", yugioh: "80a34465" }[e] +
                  ".css",
                i = s.p + t,
                o = document.getElementsByTagName("link"),
                u = 0;
              u < o.length;
              u++
            ) {
              var c = o[u],
                p = c.getAttribute("data-href") || c.getAttribute("href");
              if ("stylesheet" === c.rel && (p === t || p === i)) return r();
            }
            var l = document.getElementsByTagName("style");
            for (u = 0; u < l.length; u++) {
              (c = l[u]), (p = c.getAttribute("data-href"));
              if (p === t || p === i) return r();
            }
            var f = document.createElement("link");
            (f.rel = "stylesheet"),
              (f.type = "text/css"),
              (f.onload = r),
              (f.onerror = function (r) {
                var t = (r && r.target && r.target.src) || i,
                  o = new Error(
                    "Loading CSS chunk " + e + " failed.\n(" + t + ")"
                  );
                (o.code = "CSS_CHUNK_LOAD_FAILED"),
                  (o.request = t),
                  delete a[e],
                  f.parentNode.removeChild(f),
                  n(o);
              }),
              (f.href = i);
            var d = document.getElementsByTagName("head")[0];
            d.appendChild(f);
          }).then(function () {
            a[e] = 0;
          }))
        );
    var t = i[e];
    if (0 !== t)
      if (t) r.push(t[2]);
      else {
        var o = new Promise(function (r, n) {
          t = i[e] = [r, n];
        });
        r.push((t[2] = o));
        var c,
          p = document.createElement("script");
        (p.charset = "utf-8"),
          (p.timeout = 120),
          s.nc && p.setAttribute("nonce", s.nc),
          (p.src = u(e));
        var l = new Error();
        c = function (r) {
          (p.onerror = p.onload = null), clearTimeout(f);
          var n = i[e];
          if (0 !== n) {
            if (n) {
              var t = r && ("load" === r.type ? "missing" : r.type),
                a = r && r.target && r.target.src;
              (l.message =
                "Loading chunk " + e + " failed.\n(" + t + ": " + a + ")"),
                (l.name = "ChunkLoadError"),
                (l.type = t),
                (l.request = a),
                n[1](l);
            }
            i[e] = void 0;
          }
        };
        var f = setTimeout(function () {
          c({ type: "timeout", target: p });
        }, 12e4);
        (p.onerror = p.onload = c), document.head.appendChild(p);
      }
    return Promise.all(r);
  }),
    (s.m = e),
    (s.c = t),
    (s.d = function (e, r, n) {
      s.o(e, r) || Object.defineProperty(e, r, { enumerable: !0, get: n });
    }),
    (s.r = function (e) {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (s.t = function (e, r) {
      if ((1 & r && (e = s(e)), 8 & r)) return e;
      if (4 & r && "object" === typeof e && e && e.__esModule) return e;
      var n = Object.create(null);
      if (
        (s.r(n),
        Object.defineProperty(n, "default", { enumerable: !0, value: e }),
        2 & r && "string" != typeof e)
      )
        for (var t in e)
          s.d(
            n,
            t,
            function (r) {
              return e[r];
            }.bind(null, t)
          );
      return n;
    }),
    (s.n = function (e) {
      var r =
        e && e.__esModule
          ? function () {
              return e["default"];
            }
          : function () {
              return e;
            };
      return s.d(r, "a", r), r;
    }),
    (s.o = function (e, r) {
      return Object.prototype.hasOwnProperty.call(e, r);
    }),
    (s.p = ""),
    (s.oe = function (e) {
      throw (console.error(e), e);
    });
  var c = (window["webpackJsonp"] = window["webpackJsonp"] || []),
    p = c.push.bind(c);
  (c.push = r), (c = c.slice());
  for (var l = 0; l < c.length; l++) r(c[l]);
  var f = p;
  o.push([0, "chunk-vendors"]), n();
})({
  0: function (e, r, n) {
    e.exports = n("56d7");
  },
  1: function (e, r) {},
  "111f": function (e) {
    e.exports = JSON.parse(
      '{"&":"[&(アンド)]","@":"[@(アット)]","Ai":"[Ai(アイ)]","BF":"[BF(ブラックフェザー)]","CNo.":"[CNo.(カオスナンバーズ)]","C・HERO":"[C・HERO(コントラストヒーロー)]","D":"[D(ディー)]","D-HERO":"[D-HERO(デステニーヒーロー)]","DD":"[DD(ディーディー)]","DMZ":"[DMZ(ディーエムゼット)]","E-HERO":"[E-HERO(イービルヒーロー)]","E.M.R.":"[E.M.R.(エレクトロ・マグネティック・レールガン)]","EM":"[EM(エンタメイト)]","EX":"[EX(エクストラ)]","ＥＸ":"[ＥＸ(エクストラ)]","Em":"[Em(エンタメイジ)]","Evil★Twin":"[Evil★Twin(イビルツイン)]","E・HERO":"[E・HERO(エレメンタルヒーロー)]","FNo.":"[FNo.(フューチャーナンバーズ)]","GEAR":"[GEAR(ギア)]","HERO":"[HERO(ヒーロー)]","Kozmo":"[Kozmo(コズモ)]","LP":"[LP(ライフポイント)]","LV":"[LV(レベル)]","Live☆Twin":"[Live☆Twin(ライブツイン)]","MISSION":"[MISSION(ミッション)]","M・HERO":"[M・HERO(マスクドヒーロー)]","N":"[N(ネオスペーシアン)]","NEX":"[NEX(ネオスペーシアンエクステント)]","No.":"[No.(ナンバーズ)]","P":"[P(ペンデュラム)]","PSY":"[PSY(サイ)]","RR":"[RR(レイド・ラプターズ)]","RUM":"[RUM(ランクアップマジック)]","S":"[S(シンクロ)]","SNo.":"[SNo.(シャイニングナンバーズ)]","SPYRAL":"[SPYRAL(スパイラル)]","SR":"[SR(スピードロイド)]","Sin":"[Sin(シン)]","S－Force":"[S－Force(セキュリティ・フォース)]","TG":"[TG(テックジーナス)]","U.A.":"[U.A.(ウルトラアスリート)]","V・HERO":"[V・HERO(ヴィジョンヒーロー)]","WW":"[WW(ウィンド・ウィッチ)]","X":"[X(エクシーズ)]","X・HERO":"[X・HERO(エクストラヒーロー)]","ZS":"[ZS(ゼアル・サーバス)]","a－vida":"[a－vida(アヴィダ)]","α":"[α(アルファ)]","β":"[β(ベータ)]","γ":"[γ(ガンマ)]","δ":"[δ(デルタ)]","ζ":"[ζ(ゼータ)]","一族":"[一(いち)][族(ぞく)]","一番":"[一(いち)][番(ばん)]","一組":"[一(ひと)][組(くみ)]","万物創世龍":"[万物創世龍(テンサウザンド・ドラゴン)]","三戦":"[三(さん)][戦(せん)]","上":"[上(うえ)]","上げ":"[上(あ)]げ","上記":"[上(じょう)][記(き)]","下":"[下(した)]","不":"[不(ふ)]","不知火":"[不知火(しらぬい)]","与え":"[与(あた)]え","中":"[中(なか)]","乗":"[乗(の)]","事":"[事(こと)]","互い":"[互(たが)]い","交血鬼":"[交血鬼(アルダンピール)]","人々":"[人(ひと)][々(びと)]","他":"[他(ほか)]","仙獣":"[仙(せん)][獣(じゅう)]","代わり":"[代(か)]わり","以上":"[以(い)][上(じょう)]","以下":"[以(い)][下(か)]","以外":"[以(い)][外(がい)]","任意":"[任(にん)][意(い)]","伝":"[伝(つた)]","伝説":"[伝(でん)][説(せつ)]","位置":"[位(い)][置(ち)]","低":"[低(ひく)]","体":"[体(たい)]","何":"[何(なん)]","使い":"[使(つか)]い","使用":"[使(し)][用(よう)]","個":"[個(こ)]","倍":"[倍(ばい)]","儀式":"[儀(ぎ)][式(しき)]","元々":"[元(もと)][々(もと)]","元":"[元(もと)]","先":"[先(さき)]","先史遺産":"[先史遺産(オーパーツ)]","光":"[光(ひかり)]","全て":"[全(すべ)]て","公開":"[公(こう)][開(かい)]","六武":"[六(ろく)][武(ぶ)]","六武衆":"[六(ろく)][武(ぶ)][衆(しゅう)]","六花":"[六花(りっか)]","内":"[内(うち)]","冥界":"[冥(めい)][界(かい)]","処分":"[処(しょ)][分(ぶん)]","処理":"[処(しょ)][理(り)]","出":"[出(で)]","分":"[分(ふん)]","前":"[前(まえ)]","前世":"[前(ぜん)][世(せ)]","剛鬼":"[剛(ごう)][鬼(き)]","剣":"[剣(けん)]","剣士":"[剣(けん)][士(し)]","剣闘獣":"[剣闘獣(グラディアルビースト)]","創造神":"[創(そう)][造(ぞう)][神(しん)]","劇団":"[劇(げき)][団(だん)]","力":"[力(ちから)]","加":"[加(くわ)]","効果":"[効(こう)][果(か)]","勝利":"[勝(しょう)][利(り)]","勝負":"[勝(しょう)][負(ぶ)]","化":"[化(か)]","化合獣":"[化(か)][合(ごう)][獣(じゅう)]","化身":"[化(け)][身(しん)]","十二獣":"[十(じゅう)][二(に)][獣(しし)]","千年":"[千(せん)][年(ねん)]","半分":"[半(はん)][分(ぶん)]","及":"[及(およ)]","友情":"[友(ゆう)][情(じょう)]","双天":"[双(そう)][天(てん)]","双天将":"[双(そう)][天(てん)][将(しょう)]","反転":"[反(はん)][転(てん)]","収納":"[収(しゅう)][納(のう)]","取":"[取(と)]","受け":"[受(う)]け","召喚":"[召(しょう)][喚(かん)]","召喚時":"[召(しょう)][喚(かん)][時(じ)]","召喚獣":"[召(しょう)][喚(かん)][獣(じゅう)]","可":"[可(か)]","台本":"[台(だい)][本(ほん)]","史略":"[史(し)][略(りゃく)]","右":"[右(みぎ)]","合わ":"[合(あ)]わ","合成獣":"[合(ごう)][成(せい)][獣(じゅう)]","合計":"[合(ごう)][計(けい)]","同じ":"[同(おな)]じ","同名":"[同(どう)][名(めい)]","同士":"[同(どう)][士(し)]","名":"[名(な)]","含":"[含(ふく)]","呪眼":"[呪(じゅ)][眼(がん)]","呼":"[呼(よ)]","呼吸":"[呼(こ)][吸(きゅう)]","回":"[回(かい)]","地":"[地(ち)]","地獄":"[地(じ)][獄(ごく)]","埋葬":"[埋(まい)][葬(そう)]","場合":"[場(ば)][合(あい)]","墓地":"[墓(ぼ)][地(ち)]","士":"[士(し)]","壺":"[壺(つぼ)]","変更":"[変(へん)][更(こう)]","夢魔鏡":"[夢(ゆめ)][魔(ま)][鏡(きょう)]","大暴走":"[大(だい)][暴(ぼう)][走(そう)]","大欲":"[大(たい)][欲(よく)]","天使":"[天(てん)][使(し)]","天威":"[天(てん)][威(い)]","天気":"[天(てん)][気(き)]","天球":"[天(てん)][球(きゅう)]","天空":"[天(てん)][空(くう)]","太古":"[太(たい)][古(こ)]","失":"[失(うしな)]","奇跡":"[奇(き)][跡(せき)]","契珖":"[契(けい)][珖(こう)]","好き":"[好(す)]き","妖仙獣":"[妖(よう)][仙(せん)][獣(じゅう)]","妖刀":"[妖(よう)][刀(とう)]","妖精":"[妖(よう)][精(せい)]","妖精伝姫":"[妖精伝姫(フェアリーテイル)]","妖魔":"[妖(よう)][魔(ま)]","存在":"[存(そん)][在(ざい)]","守":"[守(しゅ)]","守備":"[守(しゅ)][備(び)]","守備力":"[守(しゅ)][備(び)][力(りょく)]","守護神":"[守(しゅ)][護(ご)][神(しん)]","宣告":"[宣(せん)][告(こく)]","宣言":"[宣(せん)][言(げん)]","宣言時":"[宣(せん)][言(げん)][時(じ)]","審判":"[審(しん)][判(ぱん)]","対":"[対(たい)]","対象":"[対(たい)][象(しょう)]","封印":"[封(ふう)][印(いん)]","導":"[導(みちび)]","属性":"[属(ぞく)][性(せい)]","岩石":"[岩(がん)][石(せき)]","嵐征竜":"[嵐(らん)][征(せい)][竜(りゅう)]","巡":"[巡(めぐ)]","左":"[左(ひだり)]","巨大":"[巨(きょ)][大(だい)]","希望":"[希(き)][望(ぼう)]","希望皇":"[希(き)][望(ぼう)][皇(おう)]","師":"[師(し)]","幻奏":"[幻(げん)][奏(そう)]","幻影騎士団":"[幻影騎士団(ファントム・ナイツ)]","幻泉":"[幻(げん)][泉(せん)]","幻獣機":"[幻(げん)][獣(じゅう)][機(き)]","幻神獣":"[幻(げん)][神(しん)][獣(じゅう)]","幻竜":"[幻(げん)][竜(りゅう)]","度":"[度(ど)]","度に":"[度(たび)]に","式":"[式(しき)]","強":"[強(つよ)]","強力":"[強(きょう)][力(りょく)]","強欲":"[強(ごう)][欲(よく)]","形式":"[形(けい)][式(しき)]","影六武衆":"[影(かげ)][六(ろく)][武(ぶ)][衆(しゅう)]","影霊衣":"[影霊衣(ネクロス)]","彼岸":"[彼(ひ)][岸(がん)]","後":"[後(ご)]","得":"[得(え)]","復活":"[復(ふっ)][活(かつ)]","必要":"[必(ひつ)][要(よう)]","忍者":"[忍(にん)][者(じゃ)]","応":"[応(おう)]","恐竜":"[恐(きょう)][竜(りゅう)]","悪魔":"[悪(あく)][魔(ま)]","意外":"[意(い)][外(がい)]","感情":"[感(かん)][情(じょう)]","憑依":"[憑(ひょう)][依(い)]","成功":"[成(せい)][功(こう)]","成功時":"[成(せい)][功(こう)][時(じ)]","戦士":"[戦(せん)][士(し)]","戦艦":"[戦(せん)][艦(かん)]","戦華":"[戦(せん)][華(か)]","戦闘":"[戦(せん)][闘(とう)]","戻":"[戻(もど)]","所":"[所(しょ)]","手":"[手(て)]","手札":"[手(て)][札(ふだ)]","払":"[払(はら)]","扱":"[扱(あつか)]","拮抗":"[拮(きっ)][抗(こう)]","持":"[持(も)]","持ち主":"[持(も)]ち[主(ぬし)]","指定":"[指(し)][定(てい)]","振":"[振(ふ)]","捕食植物":"[捕食植物(プレデター・プランツ)]","捧げ":"[捧(ささ)]げ","捨て":"[捨(す)]て","揃":"[揃(そろ)]","握手":"[握(あく)][手(しゅ)]","撃滅":"[撃(げき)][滅(めつ)]","攻":"[攻(こう)]","攻撃":"[攻(こう)][撃(げき)]","攻撃力":"[攻(こう)][撃(げき)][力(りょく)]","放":"[放(はな)]","教導":"[教導(ドラグマ)]","数":"[数(かず)]","数値":"[数(すう)][値(ち)]","数字":"[数(すう)][字(じ)]","斬機":"[斬(ザン)][機(キ)]","方法":"[方(ほう)][法(ほう)]","方界":"[方(ほう)][界(かい)]","方界獣":"[方(ほう)][界(かい)][獣(じゅう)]","族":"[族(ぞく)]","既":"[既(すで)]","昆虫":"[昆(こん)][虫(ちゅう)]","星":"[星(レベル)]","星杯":"[星(せい)][杯(はい)]","星遺物":"[星(せい)][遺(い)][物(ぶつ)]","時":"[時(とき)]","時計":"[時(と)][計(けい)]","晴":"[晴(せい)]","晴れ":"[晴(は)]れ","黒":"[黒(くろ)]","森":"[森(もり)]","暗黒":"[暗(あん)][黒(こく)]","暗黒界":"[暗(あん)][黒(こく)][界(かい)]","暴走":"[暴(ぼう)][走(そう)]","曇":"[曇(くも)]","書":"[書(しょ)]","最高":"[最(さい)][高(こう)]","木遁":"[木(もく)][遁(とん)]","条件":"[条(じょう)][件(けん)]","枚":"[枚(まい)]","植物":"[植(しょく)][物(ぶつ)]","模様":"[模(も)][様(よう)]","機巧":"[機(き)][巧(こう)]","機械":"[機(き)][械(かい)]","機皇":"[機(き)][皇(こう)]","機関":"[機(き)][関(かん)]","次":"[次(つぎ)]","正面":"[正(しょう)][面(めん)]","武士道":"[武(ぶ)][士(し)][道(どう)]","武神":"[武(ぶ)][神(じん)]","死者":"[死(し)][者(しゃ)]","残":"[残(のこ)]","毎":"[毎(ごと)]","水":"[水(みず)]","水晶機巧":"[水晶機巧(クリストロン)]","水精鱗":"[水精鱗(マーメイル)]","水遁":"[水(すい)][遁(とん)]","氷":"[氷(こおり)]","氷獄":"[氷(ひょう)][獄(ごく)]","氷結界":"[氷(ひょう)][結(けっ)][界(かい)]","氷霊神":"[氷(ひょう)][霊(れい)][神(しん)]","永続":"[永(えい)][続(ぞく)]","泡影":"[泡(ほう)][影(よう)]","注意":"[注(ちゅう)][意(い)]","海晶乙女":"[海晶乙女(マリンセス)]","海皇":"[海(かい)][皇(おう)]","海竜":"[海(かい)][竜(りゅう)]","海造賊":"[海造賊(プランドロール)]","深海":"[深(しん)][海(かい)]","混沌":"[混(こん)][沌(とん)]","満た":"[満(み)]た","火遁":"[火(か)][遁(とん)]","炎":"[炎(ほのお)]","炎星":"[炎(えん)][星(せい)]","焔聖":"[焔(えん)][聖(せい)]","無効":"[無(む)][効(こう)]","無欲":"[無(む)][欲(よく)]","無限":"[無(む)][限(げん)]","熾天":"[熾(し)][天(てん)]","爬虫類":"[爬(は)][虫(ちゅう)][類(るい)]","片方":"[片(かた)][方(ほう)]","特有":"[特(とく)][有(ゆう)]","特殊":"[特(とく)][殊(しゅ)]","状態":"[状(じょう)][態(たい)]","獣":"[獣(けもの)]","獣戦士":"[獣(じゅう)][戦(せん)][士(し)]","獣騎":"[獣(じゅう)][騎(き)]","現世":"[現(げん)][世(せ)]","生け":"[生(い)]け","生ま":"[生(う)]ま","甲虫装機":"[甲虫装機(インゼクター)]","申":"[申(もう)]","異な":"[異(こと)]な","発":"[発(はつ)]","発動":"[発(はつ)][動(どう)]","発動時":"[発(はつ)][動(どう)][時(じ)]","発生":"[発(はっ)][生(せい)]","目":"[目(め)]","直接":"[直(ちょく)][接(せつ)]","相手":"[相(あい)][手(て)]","真六武衆":"[真(しん)][六(ろく)][武(ぶ)][衆(しゅう)]","眩":"[眩(まばゆ)]","知":"[知(し)]","研究所":"[研(けん)][究(きゅう)][所(じょ)]","砦":"[砦(とりで)]","破壊":"[破(は)][壊(かい)]","破壊力":"[破(は)][壊(かい)][力(りょく)]","破械":"[破(は)][械(かい)]","確認":"[確(かく)][認(にん)]","神":"[神(かみ)]","神獣":"[神(しん)][獣(じゅう)]","神鳥":"[神鳥(シムルグ)]","神龍":"[神(しん)][龍(りゅう)]","禁忌":"[禁(きん)][忌(き)]","移":"[移(うつ)]","移動":"[移(い)][動(どう)]","種類":"[種(しゅ)][類(るい)]","穴":"[穴(あな)]","空牙団":"[空(くう)][牙(が)][団(だん)]","竜":"[竜(りゅう)]","竜儀巧":"[竜儀巧(ドライトロン)]","竜星":"[竜(りゅう)][星(せい)]","竜輝巧":"[竜輝巧(ドライトロン)]","竜魂":"[竜(りゅう)][魂(こん)]","粉砕":"[粉(ふん)][砕(さい)]","紅蓮":"[紅(ぐ)][蓮(れん)]","紋章獣":"[紋(もん)][章(しょう)][獣(じゅう)]","素材":"[素(そ)][材(ざい)]","終了":"[終(しゅう)][了(りょう)]","終了時":"[終(しゅう)][了(りょう)][時(じ)]","終焉":"[終(しゅう)][焉(えん)]","組み":"[組(く)]み","結束":"[結(けっ)][束(そく)]","結界":"[結(けっ)][界(かい)]","絶対":"[絶(ぜっ)][対(たい)]","続け":"[続(つづ)]け","緊急":"[緊(きん)][急(きゅう)]","縦列":"[縦(じゅう)][列(れつ)]","繰り出":"[繰(く)]り[出(だ)]","繰り返":"[繰(く)]り[返(かえ)]","罠":"[罠(トラップ)]","置":"[置(お)]","美し":"[美(うつく)]し","翼神竜":"[翼(よく)][神(しん)][竜(りゅう)]","者":"[者(もの)]","聖":"[聖(せい)]","聖刻":"[聖(せい)][刻(こく)]","聖霊":"[聖(せい)][霊(れい)]","能":"[能(のう)]","自分":"[自(じ)][分(ぶん)]","自身":"[自(じ)][身(しん)]","花札衛":"[花札衛(カーディアン)]","英雄":"[英(えい)][雄(ゆう)]","蘇生":"[蘇(そ)][生(せい)]","虹":"[虹(にじ)]","融合":"[融(ゆう)][合(ごう)]","蟲惑魔":"[蟲(こ)][惑(わく)][魔(ま)]","行":"[行(おこな)]","表":"[表(おもて)]","表側":"[表(おもて)][側(がわ)]","表示":"[表(ひょう)][示(じ)]","裁判":"[裁(さい)][判(ばん)]","装備":"[装(そう)][備(び)]","裏":"[裏(うら)]","裏側":"[裏(うら)][側(がわ)]","見":"[見(み)]","覚醒":"[覚(かく)][醒(せい)]","解放":"[解(かい)][放(ほう)]","計り":"[計(はか)]り","計算":"[計(けい)][算(さん)]","計算時":"[計(けい)][算(さん)][時(じ)]","記":"[記(しる)]","記憶":"[記(き)][憶(おく)]","誇":"[誇(ほこ)]","謙虚":"[謙(けん)][虚(きょ)]","貪欲":"[貪(どん)][欲(よく)]","贄":"[贄(にえ)]","起動":"[起(き)][動(どう)]","超量":"[超(ちょう)][量(りょう)]","転生炎獣":"[転生炎獣(サラマングレイト)]","輝":"[輝(かがや)]","轟雷":"[轟(ごう)][雷(らい)]","込":"[込(こ)]","辿":"[辿(たど)]","送":"[送(おく)]","逆転":"[逆(ぎゃく)][転(てん)]","通告":"[通(つう)][告(こく)]","通常":"[通(つう)][常(じょう)]","速攻":"[速(そっ)][攻(こう)]","違":"[違(ちが)]","適用":"[適(てき)][用(よう)]","選":"[選(えら)]","選択":"[選(せん)][択(たく)]","重ね":"[重(かさ)]ね","金剛":"[金(こん)][剛(ごう)]","金満":"[金(きん)][満(まん)]","鉄獣戦線":"[鉄獣戦線(トライブリゲード)]","鋼核":"[鋼(こう)][核(かく)]","閃刀":"[閃(せん)][刀(とう)]","閃刀姫":"[閃(せん)][刀(とう)][姫(き)]","閃刀機":"[閃(せん)][刀(とう)][機(き)]","開始":"[開(かい)][始(し)]","開始時":"[開(かい)][始(し)][時(じ)]","間":"[間(あいだ)]","闇":"[闇(やみ)]","阿吽":"[阿(あ)][吽(うん)]","降臨":"[降(こう)][臨(りん)]","限":"[限(かぎ)]","除":"[除(のぞ)]","除外":"[除(じょ)][外(がい)]","際":"[際(さい)]","隣":"[隣(となり)]","離れ":"[離(はな)]れ","雨":"[雨(あめ)]","雪":"[雪(ゆき)]","雷":"[雷(いかずち)]","雷天気":"[雷(らい)][天(てん)][気(き)]","雷遁":"[雷(らい)][遁(とん)]","電子光虫":"[電子光虫(デジタル・バグ)]","電脳":"[電(でん)][脳(のう)]","霊獣":"[霊(れい)][獣(じゅう)]","霊神":"[霊(れい)][神(しん)]","青眼の白龍":"[青眼の白龍(ブルーアイズ・ホワイト・ドラゴン)]","順番":"[順(じゅん)][番(ばん)]","風":"[風(かぜ)]","騎士":"[騎(き)][士(し)]","高":"[高(たか)]","魂":"[魂(たましい)]","魔妖":"[魔妖(まやかし)]","魔導":"[魔(ま)][導(どう)]","魔導獣":"[魔導獣(マジックビースト)]","魔弾":"[魔(ま)][弾(だん)]","魔法":"[魔(ま)][法(ほう)]","魔獣":"[魔(ま)][獣(じゅう)]","魔界":"[魔(ま)][界(かい)]","魔術":"[魔(ま)][術(じゅつ)]","魔轟神":"[魔(ま)][轟(ごう)][神(しん)]","魚":"[魚(さかな)]","鳥獣":"[鳥(ちょう)][獣(じゅう)]","郷":"[郷(きょう)]","黄金":"[黄(おう)][金(ごん)]","龍":"[龍(りゅう)]","灰":"[灰(は)]","流":"[流(る)]","幻影":"[幻影(げんえい)]","王":"[王(おう)]","終末":"[終末(しゅうまつ)]","成金":"[成金(なりきん)]","風来":"[風来(ふうらい)]","増殖":"[増(ぞう)][殖(しょく)]","Ｇ":"[Ｇ(ジー)]","壊獣":"[壊獣(かいじゅう)]","壊星":"[壊星(かいせい)]","精鋭":"[精鋭(せいえい)]","原始":"[原(げん)][始(し)]","生命":"[生(せい)][命(めい)]","態":"[態(たい)]","烈":"[烈(れっ)]","像":"[像(ぞう)]","禁じ":"[禁(ぞう)]じ","一滴":"[一(ひと)][滴(しずく)]","朱光の宣告者":"[朱光の宣告者(バーミリオン・デクレアラー)]","幽鬼":"[幽(ゆ)][鬼(き)]","屋敷":"[屋(や)][敷(しき)]","魔鍾":"[魔(ま)][鍾(しょう)]","洞":"[洞(どう)]","空域":"[空(くう)][域(いき)]","関":"[関(かん)]","術":"[術(じゅつ)]","増援":"[増(ぞう)][援(えん)]","援":"[援(えん)]","量子":"[量(りょう)][子(し)]","猫":"[猫(ねこ)]","幻想":"[幻(げん)][想(そう)]","破滅":"[破(は)][滅(めつ)]","破滅獣":"[破(は)][滅(めつ)][獣(じゅう)]","雲竜":"[雲(うん)][竜(りゅう)]","影":"[影(かげ)]","霊":"[霊(れい)]","Ｕ":"[Ｕ(ウルトラ)]","星間":"[星(せい)][間(かん)]","初音ミク":"[初音(はつね)]ミク","写真":"[写(しゃ)][真(しん)]","ＳＰ":"[ＳＰ(スペシャル)]","抹殺":"[抹(まっ)][殺(さつ)]","指名者":"[指(し)][名(めい)][者(しゃ)]","団":"[団(だん)]","少":"[少(しょう)]","指令":"[指(し)][令(れい)]","桜":"[桜(さくら)]","願":"[願(ねが)]","ＬＰ":"[ＬＰ(ライフポイント)]","決":"[決(き)]","光輪":"[光(こう)][輪(りん)]","時空":"[時(じ)][空(くう)]","砂":"[砂(さ)]","塵":"[塵(じん)]","大嵐":"[大(おお)][嵐(あらし)]","万":"[万(ばん)]","別":"[別(べつ)]","烏":"[烏(う)]","合":"[合(ごう)]","無":"[無(む)]","象":"[象(そう)]","堺":"[堺(かい)]","姫":"[姫(き)]","未":"[未(み)]","界":"[界(かい)]","域":"[域(いき)]","墓":"[墓(はか)]","Ｈ":"[Ｈ(ヒロイック)]","Ｃ":"[Ｃ(チャンピオン)]","惑":"[惑(わく)]","乱":"[乱(らん)]","未来":"[未(み)][来(らい)]","皇":"[皇(おう)]","陣":"[陣(じん)]","宮":"[宮(きゅう)]","勅命":"[勅(ちょく)][命(めい)]","旧神":"[旧(キュウ)][神(シン)]","天霆號":"[天霆號(ネガロギア)]","冥":"[冥(めい)]","波":"[波(は)]","女":"[女(じょ)]","魁":"[魁(かい)]","武力":"[武力(ブリキ)]","軍":"[軍(ぐん)]","奏":"[奏(そう)]","次元":"[次(じ)][元(げん)]","障壁":"[障(しょう)][壁(へき)]","滅":"[滅(ほろ)]","銀":"[銀(ぎん)]","轟":"[轟(ごう)]","咆":"[咆(ほう)]","派":"[派(は)]","兵":"[兵(へい)]","覇":"[覇(は)]","眷":"[眷(けん)]","爆裂疾風弾":"[爆裂疾風弾(バーストストリーム)]","円融魔術":"[円融魔術(マジカライズ・フュージョン)]","宵星の機神":"[宵星の機神(シーオルフェゴール)]","聖魔の乙女":"[聖魔の乙女(マギストス・メイデン)]","宣告者の神巫":"[宣告者の神巫(デクレアラー・ディヴァイナー)]","銀河眼の光波竜":"[銀河眼の光波竜(ギャラクシーアイズ・サイファー・ドラゴン)]","SB":"[SB(サイバー・ボンテージ)]","番兵":"[番(ばん)][兵(ぺい)]","核":"[核(かく)]","万華鏡":"[万(まん)][華(げ)][鏡(きょう)]","華麗":"[華(か)][麗(れい)]","身":"[身(しん)]","補給":"[補(ほ)][給(きゅう)]","部隊":"[部(ぶ)][隊(たい)]","魅惑":"[魅(み)][惑(わく)]","合わせ鏡":"[合わせ鏡(スプリット・ミラー)]","方舟":"[方(はこ)][舟(ぶね)]","選別":"[選(せん)][別(べつ)]","暗":"[暗(あん)]","遷":"[遷(せん)]","御影志士":"[御(ミ)][影(カゲ)][志(シ)][士(シ)]","巨":"[巨(きょ)]","岩":"[岩(がん)]","掌":"[掌(しょう)]","秤":"[秤(びん)]","溟界":"[溟(めい)][界(かい)]","黄昏":"[黄(たそ)][昏(がれ)]","滓":"[滓(おり)]","蛇":"[蛇(じゃ)]","睡蓮":"[睡(すい)][蓮(れん)]","楽":"[楽(らく)]","堕":"[堕(だ)]","五":"[五(ご)]","狐":"[狐(こ)]","仙":"[仙(シェン)]","虎":"[虎(こ)]","幻":"[幻(げん)]","層":"[層(そう)]","護":"[護(ご)]","電光":"[電(でん)][光(こう)]","千":"[千(ち)]","鳥":"[鳥(どり)]","天":"[天(てん)]","使徒":"[使(し)][徒(と)]","底":"[底(てい)]","推理":"[推(すい)][理(り)]","巨神兵":"[巨(きょ)][神(しん)][兵(へい)]","媒":"[媒(ばい)]","古":"[古(ふる)]","狸":"[狸(だぬき)]","三":"[三(さん)]","太":"[太(だ)]","夫":"[夫(ゆう)]","呪":"[呪(じゅ)]","文":"[文(もん)]","里":"[里(さと)]","再":"[再(さい)]","演":"[演(えん)]","僧":"[僧(そう)]","超":"[超(ちょう)]","崔":"[崔(さい)]","嵬":"[嵬(かい)]","商人":"[商(しょう)][人(にん)]","壱":"[壱(イ)]","七":"[七(ナ)]","調律":"[調(ちょう)][律(りつ)]","大":"[大(だい)]","権":"[権(ごん)]","現":"[現(げん)]","零":"[零(レイ)]","武":"[武(ブ)]","A":"[A(アサルト)]","五月雨":"[五月雨(さみだれ)]","隠":"[隠(がく)]","輪":"[輪(りん)]","双":"[双(そう)]","道":"[道(どう)]","砂漠の飛蝗賊":"[砂漠の飛蝗賊(デザート・ローカスト)]","結晶の女神":"[結晶の女神(マギストス・ゴッデス)]","双穹の騎士":"[双穹の騎士(ジャックナイツ・パラディオン)]","簡易融合":"[簡易融合(インスタントフュージョン)]","閉ザサレシ世界ノ冥神":"[閉ザサレシ世界ノ冥神(サロス＝エレス・クルヌギアス)]","亡":"[亡(ぼう)]","慄":"[慄(りつ)]","塞":"[塞(さい)]","撃":"[撃(げき)]","必殺":"[必(ひっ)][殺(さつ)]","殺":"[殺(さつ)]","居合":"[居(い)][合(あ)]","照":"[照(しょう)]","耀":"[耀(よう)]","羽根":"[羽(は)][根(ね)]","帚":"[帚(ぼうき)]","氷の":"[氷(つらら)]の","娘":"[娘(むすめ)]","轍の":"[轍(わだち)]の","雪女":"[雪(ゆき)][女(おんな)]","俥夫":"[俥(しゃ)][夫(ふ)]","麗の":"[麗(うるわし)]の","妲姫":"[妲(だっ)][姫(き)]","壊劫":"[壊(かい)][劫(ごう)]","壊":"[壊(かい)]","廻":"[廻(かい)]","骸の":"[骸(むくろ)]の","餓者":"[餓(が)][者(しゃ)]","髑髏":"[髑(どく)][髏(ろ)]","朧車":"[朧(おぼろ)][車(ぐるま)]","毒の":"[毒(どく)]の","土":"[土(つち)]","蜘蛛":"[蜘(ぐ)][蛛(も)]","変生":"[変(へん)][生(じょう)]","遊行":"[遊(ゆう)][行(こう)]","翼の":"[翼(つばさ)]の","天狗":"[天(てん)][狗(ぐ)]","波旬":"[波(は)][旬(じゅん)]","零氷の":"[零(れい)][氷(ひょう)]の","妖":"[妖(よう)]","呪われ":"[呪(のろ)]われ","紅":"[紅(あか)]","血":"[血(ち)]","染":"[染(ぞ)]","黒き覚醒":"[黒(くろ)]き[覚醒(めざめ)]","白き宿命":"[白(しろ)]き[宿命(さだめ)]","卿":"[卿(きょう)]","鬼":"[鬼(き)]","馬頭":"[馬(め)][頭(ず)]","牛頭":"[牛(ご)][頭(ず)]","生者":"[生(せい)][者(じゃ)]","禁斷":"[禁(きん)][斷(だん)]","呪術":"[呪(じゅ)][術(じゅつ)]","Ζ":"[Ζ(ゼータ)]","Λ":"[Λ(ラムダ)]","Ω":"[Ω(オメガ)]","底なし":"[底(そこ)]なし","落":"[落(お)]","才":"[才(さい)]","精神":"[精(せい)][神(しん)]","操作":"[操(そう)][作(さ)]","天龍":"[天(てん)][龍(ろう)]","雪獄":"[雪(せつ)][獄(ごく)]","青眼の究極亜竜":"[青眼の究極亜竜(ブルーアイズ・オルタナティブ・アルティメットドラゴン)]","青眼の亜白龍":"[青眼の亜白龍(ブルーアイズ・オルタナティブ・ホワイト・ドラゴン)]","青眼の究極竜":"[青眼の究極竜(ブルーアイズ・アルティメットドラゴン)]","真青眼の究極竜":"[真青眼の究極竜(ネオ・ブルーアイズ・アルティメットドラゴン)]","青眼の光龍":"[青眼の光龍(ブルーアイズ・シャイニングドラゴン)]","青眼の双爆裂龍":"[青眼の双爆裂龍(ブルーアイズ・ツイン・バースト・ドラゴン)]","獣王アルファ":"[獣(しし)][王(おう)]アルファ","冷薔薇の抱香":"[冷薔薇の抱香(フローズン・ロアーズ)]"}'
    );
  },
  "3ce2": function (e, r, n) {},
  "56d7": function (e, r, n) {
    "use strict";
    n.r(r);
    n("e260"), n("e6cf"), n("cca6"), n("a79d");
    var t = n("7a23");
    function a(e, r) {
      var n = Object(t["M"])("router-view");
      return Object(t["D"])(), Object(t["i"])("div", null, [Object(t["m"])(n)]);
    }
    n("fd01");
    const i = {};
    i.render = a;
    var o = i,
      u = (n("d3b7"), n("3ca3"), n("ddb0"), n("6c02")),
      s = [
        {
          path: "/",
          name: "app",
          component: function () {
            return n.e("app-layout").then(n.bind(null, "b4c7"));
          },
          redirect: "/yugioh",
          children: [
            {
              path: "yugioh",
              name: "yugioh",
              component: function () {
                return n.e("yugioh").then(n.bind(null, "acd7"));
              },
              meta: { title: "游戏王卡片制作器" },
            },
          ],
        },
      ],
      c = Object(u["a"])({ history: Object(u["b"])(), routes: s }),
      p = c,
      l = n("5502"),
      f = Object(l["a"])({
        state: { collapse: !1 },
        mutations: {
          setCollapse: function (e) {
            e.collapse = !e.collapse;
          },
        },
        actions: {},
      }),
      d = n("3fd4"),
      m = (n("7dd6"), n("3ef0")),
      h = n.n(m);
    n("f5df1");
    function y(e) {
      document.title = "".concat(e.meta.title);
    }
    p.beforeEach(function (e, r, n) {
      p.resolve(e.path).matched.length
        ? (y(e), n())
        : (d["a"].warning("页面不存在"), n(r.path));
    });
    var g = n("bc3a"),
      b = n.n(g),
      v = n("4328"),
      k = n.n(v);
    b.a.interceptors.request.use(
      function (e) {
        return (
          (e.baseURL = ne.baseURL),
          "get" === e.method &&
            (e.paramsSerializer = function (e) {
              return k.a.stringify(e, { arrayFormat: "repeat" });
            }),
          e
        );
      },
      function (e) {
        return console.log("req error => " + e), Promise.reject(e);
      }
    ),
      b.a.interceptors.response.use(
        function (e) {
          return e;
        },
        function (e) {
          var r,
            n,
            t,
            a =
              null !==
                (r =
                  null === (n = e.response) ||
                  void 0 === n ||
                  null === (t = n.data) ||
                  void 0 === t
                    ? void 0
                    : t.message) && void 0 !== r
                ? r
                : e.message;
          return (
            console.log("resp err => " + a),
            "数据不存在" !== a && d["b"].error({ title: "错误", message: a }),
            Promise.reject(e)
          );
        }
      );
    var w = b.a,
      S = n("5a0c"),
      j = n.n(S),
      P =
        (n("ac1f"),
        n("1276"),
        n("466d"),
        n("5cc6"),
        n("9a8c"),
        n("a975"),
        n("735e"),
        n("c1ac"),
        n("d139"),
        n("3a7b"),
        n("d5d6"),
        n("82f8"),
        n("e91f"),
        n("60bd"),
        n("5f96"),
        n("3280"),
        n("3fcc"),
        n("ca91"),
        n("25a1"),
        n("cd26"),
        n("3c5d"),
        n("2954"),
        n("649e"),
        n("219c"),
        n("170b"),
        n("b39a"),
        n("72f7"),
        n("99af"),
        n("2b3d"),
        n("3b02")),
      R = n.n(P),
      O = {
        install: function (e, r) {
          (e.config.globalProperties.config = n("9c04")),
            (e.config.globalProperties.resetForm = function (e) {
              this.$refs[e] && this.$refs[e].resetFields();
            }),
            (e.config.globalProperties.timeFilter = function (e) {
              if (e) return ne.dayjs(e).format("YYYY-MM-DD HH:mm:ss");
            }),
            (e.config.globalProperties.dataURLtoBlob = function (e) {
              var r = e.split(","),
                n = r[0].match(/:(.*?);/)[1],
                t = atob(r[1]),
                a = t.length,
                i = new Uint8Array(a);
              while (a--) i[a] = t.charCodeAt(a);
              return new Blob([i], { type: n });
            }),
            (e.config.globalProperties.downloadBlob = function (e, r) {
              r || (r = new Date().getTime());
              var n = document.createElement("a"),
                t = R.a.getExtension(e.type);
              (n.download = "".concat(r, ".").concat(t)),
                (n.href = URL.createObjectURL(e)),
                n.click();
            });
        },
      },
      x = n("1da1"),
      E =
        (n("96cf"),
        n("b0c0"),
        n("a4d3"),
        n("e01a"),
        n("4d63"),
        n("25f0"),
        n("a15b"),
        n("b64b"),
        n("d81d"),
        n("4de4"),
        n("5319"),
        n("a630"),
        n("caad"),
        n("498a"),
        n("38cf"),
        n("111f")),
      B = n("cfe6"),
      T = {
        install: function (e, r) {
          (e.config.globalProperties.baseURL = "http://yugioh.vip:9800/api"),
            (e.config.globalProperties.parseYugiohCard = (function () {
              var e = Object(x["a"])(
                regeneratorRuntime.mark(function e(r, n) {
                  var t,
                    a,
                    i,
                    o,
                    u,
                    s = arguments;
                  return regeneratorRuntime.wrap(function (e) {
                    while (1)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (
                            ((t = !(s.length > 2 && void 0 !== s[2]) || s[2]),
                            (a = {
                              name: D(r),
                              type: z(r),
                              attribute: C(r),
                              icon: L(r),
                              image: F(r),
                              cardType: M(r),
                              pendulumType: K(r),
                              level: W(r),
                              rank: W(r),
                              pendulumScale: H(r),
                              pendulumDescription: G(r),
                              monsterType: U(r, n),
                              atk: q(r),
                              def: I(r),
                              arrowList: X(r),
                              description: _(r, n),
                              firstLineCompress: Y(r),
                              package: J(r),
                              password: Z(r),
                            }),
                            "jp" !== n || !t)
                          ) {
                            e.next = 23;
                            break;
                          }
                          return (e.next = 5), ne.kanjiKanaAPI(a.name);
                        case 5:
                          return (
                            (i = e.sent),
                            (a.name = i || ne.kanjiToKana(a.name)),
                            (e.next = 9),
                            ne.effectKanjiKanaAPI(a.pendulumDescription)
                          );
                        case 9:
                          if (
                            ((o = e.sent),
                            (a.pendulumDescription =
                              o || ne.kanjiToKana(a.pendulumDescription)),
                            (a.monsterType = ne.kanjiToKana(a.monsterType)),
                            !(
                              ("monster" === a.type &&
                                "normal" === a.cardType) ||
                              ("pendulum" === a.type &&
                                "normal-pendulum" === a.pendulumType)
                            ))
                          ) {
                            e.next = 18;
                            break;
                          }
                          return (
                            (e.next = 15), ne.normalKanjiKanaAPI(a.description)
                          );
                        case 15:
                          (e.t0 = e.sent), (e.next = 21);
                          break;
                        case 18:
                          return (
                            (e.next = 20), ne.effectKanjiKanaAPI(a.description)
                          );
                        case 20:
                          e.t0 = e.sent;
                        case 21:
                          (u = e.t0),
                            (a.description =
                              u || ne.kanjiToKana(a.description));
                        case 23:
                          return e.abrupt("return", a);
                        case 24:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function (r, n) {
                return e.apply(this, arguments);
              };
            })()),
            (e.config.globalProperties.kanjiToKana = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "";
              if ("" === e) return "";
              var r = new RegExp(
                Object.keys(E)
                  .sort(function (e, r) {
                    return r.length - e.length;
                  })
                  .join("|"),
                "g"
              );
              return e
                .replace(/\[.*?\(.*?\)]/g, function (e) {
                  return "|".concat(e, "|");
                })
                .split("|")
                .filter(function (e) {
                  return e;
                })
                .map(function (e) {
                  return /\[.*?\(.*?\)]/g.test(e)
                    ? e
                    : e.replace(r, function (e) {
                        return E[e];
                      });
                })
                .join("");
            }),
            (e.config.globalProperties.kanjiKanaAPI = Object(x["a"])(
              regeneratorRuntime.mark(function e() {
                var r,
                  n,
                  t,
                  a = arguments;
                return regeneratorRuntime.wrap(
                  function (e) {
                    while (1)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (
                            ((r = a.length > 0 && void 0 !== a[0] ? a[0] : ""),
                            "" !== r)
                          ) {
                            e.next = 3;
                            break;
                          }
                          return e.abrupt("return", "");
                        case 3:
                          return (
                            (e.prev = 3),
                            (e.next = 6),
                            ne.axios.post(
                              "/kanjikana/name",
                              JSON.stringify({ name: r })
                            )
                          );
                        case 6:
                          if (((n = e.sent), (t = n.data), t.data)) {
                            e.next = 10;
                            break;
                          }
                          return e.abrupt("return", null);
                        case 10:
                          return e.abrupt("return", t.data);
                        case 13:
                          return (
                            (e.prev = 13),
                            (e.t0 = e["catch"](3)),
                            e.abrupt("return", null)
                          );
                        case 16:
                        case "end":
                          return e.stop();
                      }
                  },
                  e,
                  null,
                  [[3, 13]]
                );
              })
            )),
            (e.config.globalProperties.effectKanjiKanaAPI = Object(x["a"])(
              regeneratorRuntime.mark(function e() {
                var r,
                  n,
                  t,
                  a = arguments;
                return regeneratorRuntime.wrap(
                  function (e) {
                    while (1)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (
                            ((r = a.length > 0 && void 0 !== a[0] ? a[0] : ""),
                            "" !== r)
                          ) {
                            e.next = 3;
                            break;
                          }
                          return e.abrupt("return", "");
                        case 3:
                          return (
                            (e.prev = 3),
                            (e.next = 6),
                            ne.axios.post(
                              "/kanjikana/effect",
                              JSON.stringify({ name: r })
                            )
                          );
                        case 6:
                          if (((n = e.sent), (t = n.data), t.data)) {
                            e.next = 10;
                            break;
                          }
                          return e.abrupt("return", null);
                        case 10:
                          return e.abrupt("return", t.data);
                        case 13:
                          return (
                            (e.prev = 13),
                            (e.t0 = e["catch"](3)),
                            e.abrupt("return", null)
                          );
                        case 16:
                        case "end":
                          return e.stop();
                      }
                  },
                  e,
                  null,
                  [[3, 13]]
                );
              })
            )),
            (e.config.globalProperties.normalKanjiKanaAPI = Object(x["a"])(
              regeneratorRuntime.mark(function e() {
                var r,
                  n,
                  t,
                  a = arguments;
                return regeneratorRuntime.wrap(
                  function (e) {
                    while (1)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (
                            ((r = a.length > 0 && void 0 !== a[0] ? a[0] : ""),
                            "" !== r)
                          ) {
                            e.next = 3;
                            break;
                          }
                          return e.abrupt("return", "");
                        case 3:
                          return (
                            (e.prev = 3),
                            (e.next = 6),
                            ne.axios.post(
                              "/kanjikana/text",
                              JSON.stringify({ name: r })
                            )
                          );
                        case 6:
                          if (((n = e.sent), (t = n.data), t.data)) {
                            e.next = 10;
                            break;
                          }
                          return e.abrupt("return", null);
                        case 10:
                          return e.abrupt("return", t.data);
                        case 13:
                          return (
                            (e.prev = 13),
                            (e.t0 = e["catch"](3)),
                            e.abrupt("return", null)
                          );
                        case 16:
                        case "end":
                          return e.stop();
                      }
                  },
                  e,
                  null,
                  [[3, 13]]
                );
              })
            )),
            (e.config.globalProperties.setGlobalServer = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "";
              ne.baseURL = e;
            });
        },
      };
    function A(e) {
      var r = Array.from(e).map(function (e) {
          var r = e.charCodeAt();
          return "　" === e
            ? " "
            : "﹒" === e
            ? "·"
            : ["＠", "．", "＆", "？", "！"].includes(e) ||
              (r >= 65313 && r <= 65338) ||
              (r >= 65345 && r <= 65370)
            ? String.fromCharCode(r - 65248)
            : e;
        }),
        n = r.join("");
      return (
        (n = n.replace(/「.*?」/g, function (e) {
          return N(e);
        })),
        n
      );
    }
    function N(e) {
      var r = Array.from(e).map(function (e) {
        var r = e.charCodeAt();
        return r >= 65296 && r <= 65305 ? String.fromCharCode(r - 65248) : e;
      });
      return r.join("");
    }
    function D(e) {
      return e.name;
    }
    function z(e) {
      return 16777216 & e.type
        ? "pendulum"
        : 4 & e.type
        ? "trap"
        : 2 & e.type
        ? "spell"
        : (e.type, "monster");
    }
    function C(e) {
      return 64 & e.attribute
        ? "divine"
        : 32 & e.attribute
        ? "dark"
        : 16 & e.attribute
        ? "light"
        : 8 & e.attribute
        ? "wind"
        : 4 & e.attribute
        ? "fire"
        : 2 & e.attribute
        ? "water"
        : 1 & e.attribute
        ? "earth"
        : "light";
    }
    function L(e) {
      return 1048576 & e.type
        ? "counter"
        : 524288 & e.type
        ? "filed"
        : 262144 & e.type
        ? "equip"
        : 131072 & e.type
        ? "continuous"
        : 65536 & e.type
        ? "quick-play"
        : 128 & e.type
        ? "ritual"
        : "";
    }
    function F(e) {
      return "https://storage.googleapis.com/ygoprodeck.com/pics_artgame/".concat(
        e.id,
        ".jpg"
      );
    }
    function M(e) {
      return 67108864 & e.type
        ? "link"
        : 8388608 & e.type
        ? "xyz"
        : 16384 & e.type
        ? "token"
        : 8192 & e.type
        ? "synchro"
        : 128 & e.type
        ? "ritual"
        : 64 & e.type
        ? "fusion"
        : 32 & e.type
        ? "effect"
        : (e.type, "normal");
    }
    function K(e) {
      return "pendulum" === z(e)
        ? 8388608 & e.type
          ? "xyz-pendulum"
          : 8192 & e.type
          ? "synchro-pendulum"
          : 128 & e.type
          ? "ritual-pendulum"
          : 64 & e.type
          ? "fusion-pendulum"
          : 32 & e.type
          ? "effect-pendulum"
          : (e.type, "normal-pendulum")
        : "normal-pendulum";
    }
    function W(e) {
      var r = parseInt(e.level.toString(16).substr(-1), 16);
      if (r <= 13) {
        var n = Z(e);
        return [
          "01686814",
          "90884403",
          "65305468",
          "43490025",
          "26973555",
          "52653092",
        ].includes(n.trim())
          ? 0
          : r;
      }
      return 1;
    }
    function H(e) {
      if ("pendulum" === z(e)) {
        var r = e.desc.split(/【.*?】/);
        return parseInt(
          null === r || void 0 === r ? void 0 : r[0].replace(/[^\d]/g, "")
        );
      }
      return 0;
    }
    function G(e) {
      if ("pendulum" === z(e)) {
        var r = A(e.desc),
          n = r
            .replace(/\r/g, "\n")
            .replace(/\n\n/g, "\n")
            .split(/【.*?】/);
        return null === n || void 0 === n
          ? void 0
          : n[1].replace(/\d+→|\n/g, "").trim();
      }
      return "";
    }
    function U(e, r) {
      var n = [];
      return (
        16777216 & e.race
          ? n.push("cyberse")
          : 8388608 & e.race
          ? n.push("wyrm")
          : 4194304 & e.race
          ? n.push("creatorGod")
          : 2097152 & e.race
          ? n.push("divineBeast")
          : 1048576 & e.race
          ? n.push("psychic")
          : 524288 & e.race
          ? n.push("reptile")
          : 262144 & e.race
          ? n.push("seaSerpent")
          : 131072 & e.race
          ? n.push("fish")
          : 65536 & e.race
          ? n.push("dinosaur")
          : 32768 & e.race
          ? n.push("beastWarrior")
          : 16384 & e.race
          ? n.push("beast")
          : 8192 & e.race
          ? n.push("dragon")
          : 4096 & e.race
          ? n.push("thunder")
          : 2048 & e.race
          ? n.push("insect")
          : 1024 & e.race
          ? n.push("plant")
          : 512 & e.race
          ? n.push("wingedBeast")
          : 256 & e.race
          ? n.push("rock")
          : 128 & e.race
          ? n.push("pyro")
          : 64 & e.race
          ? n.push("aqua")
          : 32 & e.race
          ? n.push("machine")
          : 16 & e.race
          ? n.push("zombie")
          : 8 & e.race
          ? n.push("fiend")
          : 4 & e.race
          ? n.push("fairy")
          : 2 & e.race
          ? n.push("spellcaster")
          : 1 & e.race && n.push("warrior"),
        33554432 & e.type && n.push("spsummon"),
        67108864 & e.type
          ? n.push("link")
          : 16777216 & e.type
          ? n.push("pendulum")
          : 8388608 & e.type
          ? n.push("xyz")
          : 8192 & e.type
          ? n.push("synchro")
          : 128 & e.type
          ? n.push("ritual")
          : 64 & e.type && n.push("fusion"),
        4194304 & e.type && n.push("toon"),
        2097152 & e.type && n.push("flip"),
        4096 & e.type && n.push("tuner"),
        2048 & e.type && n.push("gemini"),
        1024 & e.type && n.push("union"),
        512 & e.type && n.push("spirit"),
        32 & e.type ? n.push("effect") : 16 & e.type && n.push("normal"),
        (n = n
          .map(function (e) {
            return B[r][e];
          })
          .filter(function (e) {
            return e;
          })),
        ["sc", "en"].includes(r)
          ? n.join("/")
          : ["tc", "jp"].includes(r)
          ? n.join("／")
          : n.join("/")
      );
    }
    function q(e) {
      return -2 === e.atk ? -1 : e.atk;
    }
    function I(e) {
      return "link" !== M(e) ? (-2 === e.def ? -1 : e.def) : 0;
    }
    function X(e) {
      var r = [];
      return (
        "link" === M(e) &&
          (256 & e.def && r.push(2),
          128 & e.def && r.push(1),
          64 & e.def && r.push(8),
          32 & e.def && r.push(3),
          8 & e.def && r.push(7),
          4 & e.def && r.push(4),
          2 & e.def && r.push(5),
          1 & e.def && r.push(6)),
        r
      );
    }
    function _(e, r) {
      var n = A(e.desc);
      if (
        ((n = n.replace(/\r/g, "\n").replace(/\n\n/g, "\n")),
        "pendulum" === z(e))
      ) {
        var t = n.split(/【.*?】/);
        n =
          null === t || void 0 === t ? void 0 : t[2].replace(/\n/g, "").trim();
      } else if (["fusion", "synchro", "xyz", "link", "token"].includes(M(e))) {
        var a = 0,
          i = Array.from(n).map(function (e) {
            if ("\n" === e) {
              if (a > 0) return "";
              a++;
            }
            return e;
          });
        if (((n = i.join("")), "sc" === r || "tc" === r)) {
          var o = Z(e);
          [
            "01686814",
            "90884403",
            "58293343",
            "22804644",
            "84687358",
            "44373896",
            "83743222",
            "10960419",
            "19747827",
            "46354113",
          ].includes(o.trim()) && (n = n.replace(/\n/g, ""));
        }
      } else
        -1 === n.indexOf("●")
          ? (n = n.replace(/\n/g, ""))
          : "sc" === r || "tc" === r
          ? ((n = n.replace(/\n/g, "")), (n = n.replace(/●/g, "\n●")))
          : "jp" !== r && (n = n.replace(/\n/g, ""));
      return n;
    }
    function Y(e) {
      return (
        ["monster", "pendulum"].includes(z(e)) &&
        ["fusion", "synchro", "xyz", "link"].includes(M(e))
      );
    }
    function J(e) {
      return e.setid.split(",").reverse()[0];
    }
    function Z(e) {
      var r = e.id.toString();
      return r.length < 8 && (r = "0".repeat(8 - r.length) + r), r;
    }
    n("3ce2"), n("812b");
    var V = n("1539"),
      $ = n("856a"),
      Q = Object(t["h"])(o);
    (Q.config.globalProperties.axios = w),
      (Q.config.globalProperties.dayjs = j.a);
    var ee = new V["a"]();
    ee.init(new $["a"]({ dictPath: "./dict" })),
      (Q.config.globalProperties.kuroshiro = ee),
      (Q.config.globalProperties.kUtil = V["a"].Util),
      Q.use(d["c"], { locale: h.a }),
      Q.use(O),
      Q.use(T),
      Q.use(p),
      Q.use(f);
    var re = Q.mount("#app"),
      ne = (r["default"] = re);
  },
  "72ac": function (e, r, n) {},
  "812b": function (e, r, n) {},
  "9c04": function (e) {
    e.exports = JSON.parse('{"updateTime":1621147388770}');
  },
  cfe6: function (e) {
    e.exports = JSON.parse(
      '{"sc":{"normal":"通常","effect":"效果","ritual":"仪式","fusion":"融合","synchro":"同步","xyz":"超量","toon":"卡通","spirit":"灵魂","union":"同盟","gemini":"二重","tuner":"协调","flip":"反转","pendulum":"灵摆","spsummon":"特殊召唤","link":"连接","spellcaster":"魔法师族","dragon":"龙族","zombie":"不死族","warrior":"战士族","beastWarrior":"兽战士族","beast":"兽族","wingedBeast":"鸟兽族","fiend":"恶魔族","fairy":"天使族","insect":"昆虫族","dinosaur":"恐龙族","reptile":"爬虫类族","fish":"鱼族","seaSerpent":"海龙族","aqua":"水族","pyro":"炎族","thunder":"雷族","rock":"岩石族","plant":"植物族","machine":"机械族","psychic":"念动力族","divineBeast":"幻神兽族","creatorGod":"创造神族","wyrm":"幻龙族","cyberse":"电子界族"},"tc":{"normal":"通常","effect":"效果","ritual":"儀式","fusion":"融合","synchro":"同步","xyz":"超量","toon":"卡通","spirit":"靈魂","union":"同盟","gemini":"二重","tuner":"協調","flip":"反轉","pendulum":"靈擺","spsummon":"特殊召喚","link":"連接","spellcaster":"魔法師族","dragon":"龍族","zombie":"不死族","warrior":"戰士族","beastWarrior":"獸戰士族","beast":"獸族","wingedBeast":"鳥獸族","fiend":"惡魔族","fairy":"天使族","insect":"昆蟲族","dinosaur":"恐龍族","reptile":"爬蟲類族","fish":"魚族","seaSerpent":"海龍族","aqua":"水族","pyro":"炎族","thunder":"雷族","rock":"岩石族","plant":"植物族","machine":"機械族","psychic":"念動力族","divineBeast":"幻神獸族","creatorGod":"創造神族","wyrm":"幻龍族","cyberse":"電子界族"},"jp":{"normal":"通常","effect":"効果","ritual":"儀式","fusion":"融合","synchro":"シンクロ","xyz":"エクシーズ","toon":"トゥーン","spirit":"スピリット","union":"ユニオン","gemini":"デュアル","tuner":"チューナー","flip":"リバース","pendulum":"ペンデュラム","spsummon":"特殊召喚","link":"リンク","spellcaster":"魔法使い族","dragon":"ドラゴン族","zombie":"アンデット族","warrior":"戦士族","beastWarrior":"獣戦士族","beast":"獣族","wingedBeast":"鳥獣族","fiend":"悪魔族","fairy":"天使族","insect":"昆虫族","dinosaur":"恐竜族","reptile":"爬虫類族","fish":"魚族","seaSerpent":"海竜族","aqua":"水族","pyro":"炎族","thunder":"雷族","rock":"岩石族","plant":"植物族","machine":"機械族","psychic":"サイキック族","divineBeast":"幻神獣族","creatorGod":"創造神族","wyrm":"幻竜族","cyberse":"サイバース族"},"en":{"normal":"Normal","effect":"Effect","ritual":"Ritual","fusion":"Fusion","synchro":"Synchro","xyz":"Xyz","toon":"Toon","spirit":"Spirit","union":"Union","gemini":"Gemini","tuner":"Tuner","flip":"Flip","pendulum":"Pendulum","spsummon":null,"link":"Link","spellcaster":"Spellcaster","dragon":"Dragon","zombie":"Zombie","warrior":"Warrior","beastWarrior":"Beast-Warrior","beast":"Beast","wingedBeast":"Winged Beast","fiend":"Fiend","fairy":"Fairy","insect":"Insect","dinosaur":"Dinosaur","reptile":"Reptile","fish":"Fish","seaSerpent":"Sea Serpent","aqua":"Aqua","pyro":"Pyro","thunder":"Thunder","rock":"Rock","plant":"Plant","machine":"Machine","psychic":"Psychic","divineBeast":"Divine-Beast","creatorGod":"Creator God","wyrm":"Wyrm","cyberse":"Cyberse"},"as":{"normal":"通常","effect":"効果","ritual":"儀式","fusion":"融合","synchro":"シンクロ","xyz":"エクシーズ","toon":"トゥーン","spirit":"スピリット","union":"ユニオン","gemini":"デュアル","tuner":"チューナー","flip":"リバース","pendulum":"ペンデュラム","spsummon":"特殊召喚","link":"リンク","spellcaster":"魔法使い族","dragon":"ドラゴン族","zombie":"アンデット族","warrior":"戦士族","beastWarrior":"獣戦士族","beast":"獣族","wingedBeast":"鳥獣族","fiend":"悪魔族","fairy":"天使族","insect":"昆虫族","dinosaur":"恐竜族","reptile":"爬虫類族","fish":"魚族","seaSerpent":"海竜族","aqua":"水族","pyro":"炎族","thunder":"雷族","rock":"岩石族","plant":"植物族","machine":"機械族","psychic":"サイキック族","divineBeast":"幻神獣族","creatorGod":"創造神族","wyrm":"幻竜族","cyberse":"サイバース族"},"or":{"normal":"Normal","effect":"Effect","ritual":"Ritual","fusion":"Fusion","synchro":"Synchro","xyz":"Xyz","toon":"Toon","spirit":"Spirit","union":"Union","gemini":"Gemini","tuner":"Tuner","flip":"Flip","pendulum":"Pendulum","spsummon":null,"link":"Link","spellcaster":"Spellcaster","dragon":"Dragon","zombie":"Zombie","warrior":"Warrior","beastWarrior":"Beast-Warrior","beast":"Beast","wingedBeast":"Winged Beast","fiend":"Fiend","fairy":"Fairy","insect":"Insect","dinosaur":"Dinosaur","reptile":"Reptile","fish":"Fish","seaSerpent":"Sea Serpent","aqua":"Aqua","pyro":"Pyro","thunder":"Thunder","rock":"Rock","plant":"Plant","machine":"Machine","psychic":"Psychic","divineBeast":"Divine-Beast","creatorGod":"Creator God","wyrm":"Wyrm","cyberse":"Cyberse"},"kr":{"normal":"일반","effect":"효과","ritual":"의식","fusion":"융합","synchro":"싱크로","xyz":"엑시즈","toon":"툰","spirit":"스피릿","union":"유니온","gemini":"듀얼","tuner":"튜너","flip":"리버스","pendulum":"펜듈럼","spsummon":"특수 소환","link":"링크","spellcaster":"마법사족","dragon":"드래곤족","zombie":"언데드족","warrior":"전사족","beastWarrior":"야수전사족","beast":"야수족","wingedBeast":"비행야수족","fiend":"악마족","fairy":"천사족","insect":"곤충족","dinosaur":"공룡족","reptile":"파충류족","fish":"어류족","seaSerpent":"해룡족","aqua":"물족","pyro":"화염족","thunder":"번개족","rock":"암석족","plant":"식물족","machine":"기계족","psychic":"사이킥족","divineBeast":"환신야수족","creatorGod":"창조신족","wyrm":"환룡족","cyberse":"사이버스족"}}'
    );
  },
  fd01: function (e, r, n) {
    "use strict";
    n("72ac");
  },
});
